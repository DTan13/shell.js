/**
 * 
 * @author 
 * @description A JavaScript and CSS library to create terminals
 */
!function(a,b,c){"use strict";function d(a,b){this.element=a;var c={user:this.data(this.element,"user"),host:this.data(this.element,"host"),path:this.data(this.element,"path"),style:this.data(this.element,"style"),theme:parseFloat(this.data(this.element,"theme")),responsive:parseFloat(this.data(this.element,"responsive"))};for(var d in c)null===c[d]&&delete c[d];this.extend(this,l,b),this.initialize()}function e(a,b,c){return c=c||"0",a+="",a.length>=b?a:new Array(b-a.length+1).join(c)+a}var f,g,h,i,j,k="Shell",l={user:"user",host:"host",path:"~",style:"custom",theme:"dark",responsive:!1,commands:[]},m=new Date,n=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],o=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];d.prototype.extend=function(){if(arguments.length>1)for(var a=arguments[0],b=1,c=arguments.length;c>b;b++){var d=arguments[b];for(var e in d)a[e]=d[e]}},d.prototype.data=function(a,b){return this.deserialize(a.getAttribute("data-"+b))},d.prototype.deserialize=function(a){return"true"===a?!0:"false"===a?!1:"null"===a?null:!isNaN(parseFloat(a))&&isFinite(a)?parseFloat(a):a},d.prototype.buildPrefix=function(){var a="",b=this.root?"root":this.user,c=this.root?"#":"$";switch(this.style){case"osx":a='<span class="host">'+this.host+'</span>:<span class="path">'+this.path+'</span> <span class="user">'+b+c+"</span> ";break;case"windows":this.path="undefined"!=typeof arguments[0].path?this.path:"C:\\Windows\\system32\\",a='<span class="path">'+this.path+"&gt;</span> ";break;case"ubuntu":default:a='<span class="user">'+b+'@</span><span class="host">'+this.host+'</span>:<span class="path">'+this.path+"</span>"+c+" "}return a},d.prototype.buildStatusBar=function(){var a,b,c='<div class="status-bar">',d=this.root?"root":this.user;switch(this.style){case"osx":a='<div class="buttons"><a href="javascript:;" class="close" title="Close"><i class="fa fa-times"></i></a><a href="javascript:;" class="minimize" title="Minimize"><i class="fa fa-minus"></i></a><a href="javascript:;" class="enlarge" title="Enlarge"><i class="fa fa-plus"></i></a></div>',b='<div class="title">'+d+" &horbar; sh</div>",c+=a+b;break;case"windows":a='<div class="buttons"><a href="javascript:;" class="minimize" title="Minimize"><i class="fa fa-minus"></i></a><a href="javascript:;" class="enlarge" title="Enlarge"><i class="fa fa-square-o"></i></a><a href="javascript:;" class="close" title="Close"><i class="fa fa-times"></i></a></div>',b='<div class="title"><span class="icon"><i class="fa fa-terminal"></i></span> Command Prompt</div>',c+=b+a;break;case"ubuntu":default:a='<div class="buttons"><a href="javascript:;" class="close" title="Close"><i class="fa fa-times"></i></a><a href="javascript:;" class="minimize" title="Minimize"><i class="fa fa-minus"></i></a><a href="javascript:;" class="enlarge" title="Enlarge"><i class="fa fa-plus"></i></a></div>',b='<div class="title">'+d+"@"+this.host+": "+this.path+"</div>",c+=a+b}return c+="</div>"},d.prototype.initialize=function(){if(this.element){if(f=this.commands,g=("shell "+this.style+" "+this.theme+" "+(this.responsive?"responsive ":"").toString()+" "+(this.shadow?"shadow ":"")).toString(),h=this.buildStatusBar(),i='<div class="content">',"osx"===this.style&&(i+='<div class="line"><span class="command">Last login: '+n[m.getDay()]+" "+o[m.getMonth()]+" "+e(m.getHours(),2)+":"+e(m.getMinutes(),2)+":"+e(m.getSeconds(),2)+" on ttys000</span></div>"),"object"==typeof f&&f[0]){this.root=!1;var a=this;j=this.buildPrefix(),f.forEach(function(b){i+='<div class="line'+(a.root?" root":"")+'">'+j+'<span class="command">'+b+"</span></div>","windows"!==a.style&&(/sudo/.test(b)&&(a.root=!0,j=a.buildPrefix(),h=a.buildStatusBar(),i+='<div class="line root">[sudo] password for '+a.user+':<span class="command"></span></div>'),/exit/.test(b)&&(a.root=!1,j=a.buildPrefix(),h=a.buildStatusBar(),i+='<div class="line logout">logout</div>'))})}i+="</div>",this.element.className+=g,this.element.innerHTML=h+i}},a[k]=d}(window,document);